jobs:
  include:
  - os: osx
    osx_image: xcode11.4
    language: node_js
    node_js: 14
    env:
    - ELECTRON_CACHE=$HOME/.cache/electron
    - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder
  - os: linux
    services: docker
    language: generic
notifications:
  email: false
cache:
  yarn: true
  directories:
  - node_modules
  - "$HOME/.cache/electron"
  - "$HOME/.cache/electron-builder"
before_install:
- |
  if [ "$TRAVIS_OS_NAME" == "osx" ]; then
    mkdir -p /tmp/git-lfs && curl -L https://github.com/github/git-lfs/releases/download/v2.3.1/git-lfs-$([ "$TRAVIS_OS_NAME" == "linux" ] && echo "linux" || echo "darwin")-amd64-2.3.1.tar.gz | tar -xz -C /tmp/git-lfs --strip-components 1
    export PATH="/tmp/git-lfs:$PATH"
  fi
before_script:
- git lfs pull
script:
- echo $(env | grep -vE '\r|\n' | grep -iE 'DEBUG|NODE_|ELECTRON_|YARN_|NPM_|CI|CIRCLE|TRAVIS|APPVEYOR_|CSC_|_TOKEN|_KEY|AWS_|STRIP|BUILD_')
- |
  if [ "$TRAVIS_OS_NAME" == "linux" ]; then
    docker run --rm \
      `env | sed -n '/^[^\t]/s/=.*//p' | grep -iE 'DEBUG|NODE_|ELECTRON_|YARN_|NPM_|CI|CIRCLE|TRAVIS|APPVEYOR_|CSC_|_TOKEN|_KEY|AWS_|STRIP|BUILD_' | sed '/^$/d' | sed 's/^/-e /g' | tr '\n' ' '` \
      -v ${PWD}:/project \
      -v ~/.cache/electron:/root/.cache/electron \
      -v ~/.cache/electron-builder:/root/.cache/electron-builder \
      electronuserland/builder:wine \
      /bin/bash -c "yarn --link-duplicates --pure-lockfile && yarn run make"
  else
    yarn run make
  fi
deploy:
  provider: script
  script: bash deploy.travis.sh
  skip_cleanup: true
  on:
    branch: prod
before_cache:
- rm -rf $HOME/.cache/electron-builder/wine
branches:
  only:
  - master
  - prod
